{"version":3,"sources":["pages/studentside/StudentLogin/Register.js"],"names":["StudentRegister","state","new_register","useContext","AuthContext","isAuthenticated","formData","setFormData","useState","newRegisterFormData","loading","setLoading","handleInputChange","e","name","value","target","toUpperCase","response","setResponse","React","createElement","Redirect","to","style","background","Toaster","className","backgroundImage","concat","bglogin","width","backgroundSize","overflow","maxWidth","color","fontWeight","fontSize","FontAwesomeIcon","icon","faInfoCircle","href","textAlign","Form","onSubmit","async","preventDefault","res","data","success","toast","error","message","console","inputFields","map","input","index","type","Col","xs","key","label","Group","Label","Control","Object","assign","required","onChange","Select","options","option","Button","disabled","includes","borderRadius","Link","display"],"mappings":"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","file":"static/js/12.d09de579.chunk.js","sourcesContent":["import { Button, Col, Form } from \"@themesberg/react-bootstrap\";\nimport React, { useContext, useState } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { AuthContext } from \"../../../context/AuthContext\";\nimport bglogin from \"../../../assets/img/register_bg_2.png\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"../../../css/RegisterForm.css\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { inputFields, newRegisterFormData } from \"../../../constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst StudentRegister = () => {\n    const { state, new_register } = useContext(AuthContext);\n    const { isAuthenticated } = state;\n\n    const [formData, setFormData] = useState(newRegisterFormData);\n\n    const [loading, setLoading] = useState(false);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        if (name === \"roll_no\" || name === \"blood_group\") {\n            setFormData({\n                ...formData,\n                [name]: value.toUpperCase()\n            })\n            return;\n        }\n\n        setFormData({\n            ...formData,\n            [name]: value\n        })\n\n    }\n\n    const [response, setResponse] = useState(null);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            setLoading(true);\n            setResponse(null);\n            const res = await new_register(formData);\n            if (res.data.success) {\n                toast.success(\"Data saved successfully for verification. You will receive a mail once your data is verified.\");\n                setResponse(\"Data saved successfully for verification. You will receive a mail once your data is verified.\");\n                setFormData(newRegisterFormData);\n            }\n            else {\n                toast.error(res.data.message);\n                setResponse(res.data.message);\n            }\n            setLoading(false);\n        } catch (error) {\n            console.error('Error:', error.response ? error.response.data : error.message);\n            toast.error(\"Some error occured\");\n            setLoading(false);\n            setResponse('Error');\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div style={{ background: \"#262b40\" }}>\n            <Toaster />\n            <div\n                className=\"d-flex justify-content-center registerContainer px-4 align-items-center\"\n                style={{\n                    backgroundImage: `url(${bglogin})`,\n                    width: \"100%\",\n                    backgroundSize: \"cover\",\n                    background: \"fixed\",\n                    overflow: \"scroll\",\n                }}\n            >\n                <div style={{ overflow: \"scroll\", maxWidth: \"100%\", width: \"100%\", color: \"orange\" }} className=\"registerForm\">\n                    <div className=\"d-flex justify-items-center gap-2 mb-2\" style={{ width: '100%', fontWeight: '600', fontSize: '18px' }} >\n                        <span><FontAwesomeIcon icon={faInfoCircle} /></span>\n                        <div>\n                            Please ensure you input your information accurately into the form. Verify all details prior to submission, as you have a single opportunity to complete this form.\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-items-center gap-2 mb-5\" style={{ width: '100%', fontWeight: '600', fontSize: '18px' }} >\n                        <span><FontAwesomeIcon icon={faInfoCircle} /></span>\n                        <div>\n                            Incase of any query: <a href=\"mailto:placementsin@nsut.ac.in\" style={{color: 'blue'}}>placementsin@nsut.ac.in</a>\n                        </div>\n                    </div>\n                    <h2 style={{ color: \"darkorange\", textAlign: \"center\" }}>Register</h2>\n                    <Form onSubmit={handleSubmit} className=\"form w-full\">\n                        {inputFields.map((input, index) => {\n                            if (input.type === 'text' || input.type === 'email' || input.type === 'number') {\n                                return <Col xs={5} className=\"mt-3 registerInput\" key={input.label + index + input.type} >\n                                    <Form.Group>\n                                        <Form.Label>{input.label}</Form.Label>\n                                        <Form.Control\n                                            type={input.type}\n                                            required\n                                            name={input.name}\n                                            value={formData[input.name]}\n                                            onChange={handleInputChange}\n                                            {...input}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            }\n                            else if (input.type === \"select\") {\n                                return <Form.Group className=\"mt-3\" key={input.label + index + input.type}>\n                                    <Form.Label>{input.label}</Form.Label>\n                                    <Form.Select name={input.name} onChange={handleInputChange} required>\n                                        {input.options.map((option, index) => <option key={option.name + index} value={option.value}>{option.name}</option>)}\n                                    </Form.Select>\n                                </Form.Group>\n                            }\n                            else if (input.type === \"date\") {\n                                return <Col xs={5} className=\"mt-3 registerInput\" key={input.label + index + input.type} >\n                                    <Form.Group>\n                                        <Form.Label>{input.label}</Form.Label>\n                                        <Form.Control\n                                            type={input.type}\n                                            required\n                                            name={input.name}\n                                            value={formData[input.name]}\n                                            onChange={handleInputChange}\n                                            {...input}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            }\n                            else return null;\n                        })}\n                        <div className=\"mt-5 registerButton\">\n                            <Button\n                                style={{\n                                    width: \"100%\",\n                                    background: \"linear-gradient(to right, #fb7b4a, #ee3344)\",\n                                }}\n                                disabled={loading}\n                                type=\"submit\"\n                            >\n                                Register\n                            </Button>\n                            {response && <div className=\"mt-1\" style={{ color: response.includes('successfully') ? 'green' : 'red', width: '100%', textAlign: 'center', fontWeight: 'bold', fontSize: '20px' }}>\n                                {response}\n                            </div>}\n                        </div>\n                        <div className=\"text-center w-100\">\n                            or\n                        </div>\n                        <div className=\"mt-2 p-2 text-white text-center registerButton\" style={{\n                            borderRadius: \"8px\",\n                            background: \"linear-gradient(to right, #fb7b4a, #ee3344)\",\n                        }}>\n                            <Link\n                                to={'/login'}\n                                className=\"text-white text-center\"\n                                style={{\n                                    width: \"100%\",\n                                    display: 'block'\n                                }}>\n                                Login\n                            </Link>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default StudentRegister;\n"],"sourceRoot":""}