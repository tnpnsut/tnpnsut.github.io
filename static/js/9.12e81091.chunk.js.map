{"version":3,"sources":["services/fileUpload.js","css/Companydetails.module.css","../node_modules/@themesberg/react-bootstrap/lib/esm/InputGroup.js","utils/dateformatter.js","pages/studentside/CompanyDetails.js"],"names":["async","fileUpload","file","formdata","FormData","append","securedAxiosInstance","post","uploadResumeAndLink","index","uploadResponse","put","uploadId","data","_id","deleteResume","concat","module","exports","InputGroupText","createWithBsPrefix","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","FormCheckInput","type","Checkbox","dateFormatter","date","dt","Date","setHours","getHours","setMinutes","getMinutes","CompanyDetails","_companyDetails$compa","_companyDetails$categ","match","params","state","useContext","AuthContext","companyDetails","setCompanyDetails","useState","eligible","setEligible","resumes","setResumes","selectedResume","setSelectedResume","conditions","setconditions","additionalQues","setAdditionalQues","additionalAns","setAdditionalAns","inputStatus","setInputStatus","submitStatus","setStatus","loading","success","error","alreadyAppliedStatus","setAlreadyAppliedStatus","alreadyPlacedStatus","setAlreadyPlacedStatus","showNotification","NotificationContext","filesToUpload","setFiles","uploadFile","setUploadFile","pref_locs","applyForRole","current","length","uploadedFileUrls","Promise","all","map","_ref2","question","formData","response","uploadService","status","el","_response$data$","expectedAns","url","conv_url","every","eventid","studentID","userDetails","student","student_resume","Additional_answers","console","log","useEffect","company","get","degreeBranchesMap","branchesAllowed","forEach","item","branch","degree","push","fetchCompany","already_applied","already_placed","checkEligibility","res","fetchResumes","Loader","isRegistrationDatePassed","lastDate","getTime","now","styles","outerdiv","companybar","Name","jobtitle","wrapper","contentdiv","hero","companylogo","src","alt","companycontentwrapper","style","padding","typetag","marginTop","marginBottom","parent","parenttag","parentcontent","placeOfPosting","batch","stipend","stipend_info","Fragment","cgpa","category","toUpperCase","backlogs","Object","entries","_ref3","branches","key","join","toDateString","toLocaleTimeString","whiteSpace","apc","additional_info","optional_redirect","href","target","rel","color","textDecoration","description","attachments","sn","cursor","onClick","window","open","fileicon","width","filetitle","name","downloadicon","fontSize","resumediv","eligiblewrapper","fontWeight","display","FontAwesomeIcon","marginRight","icon","faCheckCircle","faTimesCircle","optional_criteria","percentage_10th","percentage_12th","bans","gender","Form","Group","ls","Label","option","Check","id","label","onChange","e","l","flag","checked","val","filter","element","allFilled","trim","value","Control","required","accept","files","updatedFiles","f","placeholder","faSearch","Select","Button","background","borderColor","disabled","preventDefault","student_id","then","location","reload","withdrawForRole"],"mappings":"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","file":"static/js/9.12e81091.chunk.js","sourcesContent":["import { securedAxiosInstance } from \"../axiosConfig\";\n\nexport async function fileUpload(file) {\n  const formdata = new FormData();\n  formdata.append(\"files\", file);\n\n  return await securedAxiosInstance.post(\"/upload\", formdata);\n}\n\nexport async function fileUploadAndLink(file, ref, refId, field) {\n  const formdata = new FormData();\n  formdata.append(\"ref\", ref);\n  formdata.append(\"refId\", refId);\n  formdata.append(\"field\", field);\n  formdata.append(\"files\", file);\n\n  return securedAxiosInstance.post(\"/upload\", formdata);\n}\n\nexport async function uploadResumeAndLink(file, index) {\n  if (!file) return;\n\n  const uploadResponse = await fileUpload(file);\n\n  const linkResumeResponse = await securedAxiosInstance.put(\n    \"/students/resume\",\n    {\n      uploadId: uploadResponse.data[0]._id,\n      index,\n    }\n  );\n  return linkResumeResponse;\n}\n\nexport async function deleteResume(uploadId) {\n  if (!uploadId) return;\n\n  return await securedAxiosInstance.put(`/students/resume/${uploadId}`);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerdiv\":\"Companydetails_outerdiv__3K0H1\",\"companybar\":\"Companydetails_companybar__23Sj-\",\"wrapper\":\"Companydetails_wrapper__z9mdp\",\"contentdiv\":\"Companydetails_contentdiv__1tnFf\",\"resumediv\":\"Companydetails_resumediv__2HLKP\",\"hero\":\"Companydetails_hero__19a3J\",\"companylogo\":\"Companydetails_companylogo__3MDiK\",\"typetag\":\"Companydetails_typetag__2OlVK\",\"parent\":\"Companydetails_parent__28pXE\",\"parenttag\":\"Companydetails_parenttag__1nQ84\",\"file\":\"Companydetails_file__2UJ9i\",\"fileicon\":\"Companydetails_fileicon__3-M_8\",\"filetitle\":\"Companydetails_filetitle__3KaqA\",\"downloadicon\":\"Companydetails_downloadicon__1U-ng\",\"eligiblewrapper\":\"Companydetails_eligiblewrapper__2zcKs\",\"companycontentwrapper\":\"Companydetails_companycontentwrapper__1ZZrW\"};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});\n\nexport default InputGroupWithExtras;","export const dateFormatter = (date) => {\n  let dt = new Date(date);\n  dt.setHours(dt.getHours());\n  dt.setMinutes(dt.getMinutes());\n\n  return dt;\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  faCheckCircle,\n  faSearch,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Form, InputGroup } from \"@themesberg/react-bootstrap\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { securedAxiosInstance } from \"../../axiosConfig\";\nimport Loader from \"../../components/Loader\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { NotificationContext } from \"../../context/NotificationContext\";\nimport styles from \"../../css/Companydetails.module.css\";\nimport { dateFormatter } from \"../../utils/dateformatter\";\nimport * as uploadService from \"../../services/fileUpload\";\n\nconst CompanyDetails = ({ match }) => {\n  const { params } = match;\n  const { state } = useContext(AuthContext);\n  const [companyDetails, setCompanyDetails] = useState({});\n  const [eligible, setEligible] = useState(true);\n  const [resumes, setResumes] = useState([]);\n  const [selectedResume, setSelectedResume] = useState(\"\");\n  const [conditions, setconditions] = useState();\n  const [additionalQues, setAdditionalQues] = useState(null);\n  const [additionalAns, setAdditionalAns] = useState([]);\n  const [inputStatus, setInputStatus] = useState(true);\n\n  const [submitStatus, setStatus] = useState({\n    loading: false,\n    success: false,\n    error: false,\n  });\n  const [alreadyAppliedStatus, setAlreadyAppliedStatus] = useState(false);\n  const [alreadyPlacedStatus, setAlreadyPlacedStatus] = useState(false);\n  const { showNotification } = useContext(NotificationContext);\n  const [filesToUpload, setFiles] = useState([]);\n  const [uploadFile, setUploadFile] = useState(false);\n\n  var pref_locs = [];\n\n  const fetchResumes = async () => {\n    try {\n      setStatus((current) => ({ ...current, loading: true }));\n      const res = await securedAxiosInstance.get(`/students/resumes`);\n      setResumes(res.data.resumes);\n      setSelectedResume(res.data.resumes[0].url);\n      setStatus((current) => ({ ...current, loading: false }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchCompany = async () => {\n    try {\n      setStatus((current) => ({ ...current, loading: true }));\n      const company = await securedAxiosInstance.get(\n        `/company-events/${params.eventid}`\n      );\n      if (company.data[\"is_additional_ques\"] === true) {\n        setAdditionalQues(company.data[\"additional_ques\"]);\n        setAdditionalAns(company.data[\"additional_ques\"]);\n        setInputStatus(false);\n      } else {\n        setAdditionalQues(null);\n        setAdditionalAns(null);\n      }\n\n      const degreeBranchesMap = {};\n      company.data.branchesAllowed.forEach((item) => {\n        const { branch, degree } = item;\n        if (degree in degreeBranchesMap) {\n          degreeBranchesMap[degree].push(branch);\n        } else {\n          degreeBranchesMap[degree] = [branch];\n        }\n      });\n\n      company.data.branchesAllowed = degreeBranchesMap;\n      setCompanyDetails(company.data);\n      setStatus((current) => ({ ...current, loading: false }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const checkEligibility = async () => {\n    try {\n      const status = await securedAxiosInstance.get(\n        `/company-events/is_student_eligible/${params.eventid}?studentID=${state.userDetails.student}`\n      );\n      if (status.data.eligible.conditions.already_applied)\n        setAlreadyAppliedStatus(true);\n      if (status.data.eligible.conditions.already_placed)\n        setAlreadyPlacedStatus(true);\n      setconditions(status.data.eligible.conditions);\n      setStatus((current) => ({ ...current, loading: false }));\n      setEligible(status.data.eligible.status);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Submitting pdf form of additional question\n  async function conv_url(file, question) {\n    if (!file) return;\n    const formData = new FormData();\n\n    try {\n      formData.append(`${question}`, file);\n\n      const response = await uploadService.fileUpload(file);\n\n      if (response.status === 200) {\n        additionalAns.map((el) => {\n          if (el.type == \"file\") {\n            el.expectedAns = response?.data[0]?.url;\n          }\n        });\n\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // to withdraw students application\n  const withdrawForRole = async (e) => {\n\n    e.preventDefault();\n\n    const id = params.eventid;  \n    try {\n      await securedAxiosInstance.post(\n        `https://api.tnpnsut.in/registrations/${id}`,\n        {\n          student_id: state.userDetails.student\n        }\n      ).then((res)=>{\n        if (res.status==200){\n          console.log(res)\n          setAlreadyAppliedStatus(false);\n          setStatus((current) => ({ ...current, loading: false, success: true }));\n          showNotification(res?.data);\n          window.location.reload()\n        }\n        else{\n          showNotification(res?.data)\n        }\n      })\n    } catch (error) {\n      showNotification('Error withdrawing from role!');\n      throw error;\n    }\n  };\n\n  const applyForRole = async () => {\n    setStatus((current) => ({ ...current, loading: true }));\n\n    try {\n      // const uploadedFileUrls = filesToUpload.map(({ file, question }) => file.name);\n      if (filesToUpload && filesToUpload.length > 0) {\n        const uploadedFileUrls = await Promise.all(\n          filesToUpload.map(({ file, question }) => conv_url(file, question))\n        );\n\n        // Check if all files were uploaded successfully\n        const allFilesUploaded = uploadedFileUrls.every(\n          (status) => status === true\n        );\n\n        if (!allFilesUploaded) {\n          showNotification(\"Failed to apply in the company Event\");\n          return;\n        }\n      }\n\n      const response = await securedAxiosInstance.put(\n        `/company-events/apply/${params.eventid}`,\n        {\n          studentID: state.userDetails.student,\n          student_resume: selectedResume,\n          Additional_answers: additionalAns,\n        }\n      );\n\n      setAlreadyAppliedStatus(true);\n      setStatus((current) => ({ ...current, loading: false, success: true }));\n      showNotification(\"Successfully Applied!\");\n    } catch (error) {\n      setStatus((current) => ({\n        ...current,\n        loading: false,\n        success: false,\n        error: true,\n      }));\n      showNotification(\"Failed to apply in the company Event\");\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCompany();\n    checkEligibility();\n    fetchResumes();\n  }, []);\n\n  if (submitStatus.loading) return <Loader />;\n\n  const isRegistrationDatePassed =\n    new Date(companyDetails.lastDate).getTime() < Date.now();\n\n  return (\n    <div className={styles.outerdiv}>\n      <div className={styles.companybar}>\n        <h6>\n          {companyDetails.company ? companyDetails.company.Name : \"\"} |{\" \"}\n          {companyDetails.jobtitle}\n        </h6>\n      </div>\n      <div className={styles.wrapper}>\n        <div className={styles.contentdiv}>\n          <div className={styles.hero}></div>\n          <div\n            className={`${styles.companylogo} d-flex justify-content-center align-items-center`}\n          >\n            <img\n              src={`https://tnp-company-logos.s3.ap-south-1.amazonaws.com/${companyDetails.company?.Name}.png`}\n              alt=\"Keep going!! You'll reach there.\"\n            ></img>\n          </div>\n          <div className={styles.companycontentwrapper}>\n            <div style={{ padding: \"30px 0px 0px\" }}>\n              <h3>{companyDetails.jobtitle}</h3>\n              <h6>\n                {companyDetails.company ? companyDetails.company.Name : \"\"}\n              </h6>\n              <div className={styles.typetag}>{companyDetails.type}</div>\n              <hr style={{ marginTop: \"30px\" }} />\n            </div>\n            <div style={{ padding: \"30px 0\" }}>\n              <div style={{ marginBottom: \"30px\" }}>\n                <h5>Opening Overview</h5>\n                <hr />\n              </div>\n              <div>\n                <div className={styles.parent}>\n                  <div className={styles.parenttag}>Place of Posting</div>\n                  <div className={styles.parentcontent}>\n                    {companyDetails.placeOfPosting}\n                  </div>\n                </div>\n                <div className={styles.parent}>\n                  <div className={styles.parenttag}>Batch</div>\n                  <div className={styles.parentcontent}>\n                    {companyDetails.batch}\n                  </div>\n                </div>\n                <div className={styles.parent}>\n                  <div className={styles.parenttag}>CTC/Stipend</div>\n                  <div className={styles.parentcontent}>\n                    {companyDetails.stipend}\n                  </div>\n                </div>\n                <div className={styles.parent}>\n                  <div className={styles.parenttag}>CTC/Stipend Info.</div>\n                  <div className={styles.parentcontent}>\n                    {companyDetails.stipend_info\n                      ? companyDetails.stipend_info\n                      : \"Not Mentioned\"}\n                  </div>\n                </div>\n                {(companyDetails.type === \"Placement\" ||\n                  companyDetails.type === \"Internship\") && (\n                  <>\n                    <div className={styles.parent}>\n                      <div className={styles.parenttag}>CGPA</div>\n                      <div className={styles.parentcontent}>\n                        {companyDetails.cgpa}\n                      </div>\n                    </div>\n                    <div className={styles.parent}>\n                      <div className={styles.parenttag}>Category</div>\n                      <div className={styles.parentcontent}>\n                        {companyDetails.category?.toUpperCase()}\n                      </div>\n                    </div>\n                    <div className={styles.parent}>\n                      <div className={styles.parenttag}>Backlogs</div>\n                      <div className={styles.parentcontent}>\n                        {companyDetails.backlogs}\n                      </div>\n                    </div>\n                    <div className={styles.parent}>\n                      <div className={styles.parenttag}>Allowed Branches</div>\n                      <div className={styles.parentcontent}>\n                        {Object.entries(companyDetails.branchesAllowed).map(\n                          ([degree, branches]) => (\n                            <div key={degree}>\n                              <span className=\"fw-bolder\">{degree}</span>:{\" \"}\n                              {branches.join(\", \")}\n                            </div>\n                          )\n                        )}\n                      </div>\n                    </div>\n                    <div className={styles.parent}>\n                      <div className={styles.parenttag}>\n                        Registration last date\n                      </div>\n                      <div className={styles.parentcontent}>\n                        {dateFormatter(companyDetails.lastDate).toDateString()}{\" \"}\n                        -\n                        {dateFormatter(\n                          companyDetails.lastDate\n                        ).toLocaleTimeString()}\n                      </div>\n                    </div>\n                  </>\n                )}\n                <div className={styles.parent}>\n                  <div className={styles.parenttag}>Coordinaters</div>\n                  <div\n                    className={styles.parentcontent}\n                    style={{ whiteSpace: \"pre-line\" }}\n                  >\n                    {companyDetails?.apc}\n                  </div>\n                </div>\n                {companyDetails?.additional_info !== \"\" && (\n                  <div className={styles.parent}>\n                    <div className={styles.parenttag}>Additional Info</div>\n                    <div className={styles.parentcontent}>\n                      {companyDetails?.additional_info}\n                    </div>\n                  </div>\n                )}\n                {companyDetails?.optional_redirect !== \"\" && (\n                  <div className={styles.parent}>\n                    <div className={styles.parenttag}>Form Link</div>\n                    <div className={styles.parentcontent}>\n                      <a\n                        href={companyDetails?.optional_redirect || \"#\"}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={{ color: \"blue\", textDecoration: \"underline\" }}\n                      >\n                        Click Here\n                      </a>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div style={{ padding: \"30px 0\" }}>\n              <div style={{ marginBottom: \"30px\" }}>\n                <h5>Job Description</h5>\n                <hr />\n              </div>\n              <div style={{ whiteSpace: \"pre-line\" }}>\n                {companyDetails.description}\n              </div>\n            </div>\n            <div style={{ padding: \"30px 0\" }}>\n              <div style={{ marginBottom: \"30px\" }}>\n                <h5>Attached Documents</h5>\n                <hr />\n              </div>\n              <div>\n                {companyDetails.attachments &&\n                  companyDetails.attachments.map((sn, index) => (\n                    <div\n                      key={index}\n                      className={`${styles.file} mb-2`}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => window.open(sn.url)}\n                    >\n                      <div className={styles.fileicon}>\n                        <img src=\"/pdf.png\" width=\"60%\" alt=\"pdf\" />\n                      </div>\n                      <div className={styles.filetitle}>{sn.name}</div>\n                      <div className={styles.downloadicon}>\n                        <i\n                          style={{ color: \"#1456cf\", fontSize: \"20px\" }}\n                          className=\"bi bi-download\"\n                        ></i>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.resumediv}>\n          <div style={{ padding: \"30px 0\" }}>\n            <div style={{ marginBottom: \"30px\" }}>\n              <h6>Eligibility Criteria Evaluation Result</h6>\n              <p style={{ fontSize: \"13px\" }}>\n                Evaluated At: {new Date().toDateString()}\n              </p>\n              <hr />\n            </div>\n            <div className={styles.eligiblewrapper}>\n              {alreadyAppliedStatus && (\n                <div style={{ width: \"80%\" }}>\n                  <p\n                    style={{\n                      fontSize: \"16px\",\n                      // display: \"flex\",\n                      fontWeight: \"bold\",\n                      color: \"red\",\n                    }}\n                  >\n                    You have already applied for this opportunity.\n                  </p>\n                </div>\n              )}\n\n              {alreadyPlacedStatus && (\n                <div style={{ width: \"80%\" }}>\n                  <p\n                    style={{\n                      fontSize: \"16px\",\n                      display: \"flex\",\n                      fontWeight: \"bold\",\n                      color: \"red\",\n                    }}\n                  >\n                    You cannot apply for this opportunity because you are\n                    already placed.\n                  </p>\n                </div>\n              )}\n              {(!alreadyAppliedStatus || !alreadyPlacedStatus) && (\n                <div style={{ width: \"80%\" }}>\n                  <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                    {conditions && !conditions.cgpa ? (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"green\",\n                        }}\n                        icon={faCheckCircle}\n                      />\n                    ) : (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"red\",\n                        }}\n                        icon={faTimesCircle}\n                      />\n                    )}\n                    CGPA Criteria\n                  </p>\n                  <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                    {conditions && !conditions.batch ? (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"green\",\n                        }}\n                        icon={faCheckCircle}\n                      />\n                    ) : (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"red\",\n                        }}\n                        icon={faTimesCircle}\n                      />\n                    )}{\" \"}\n                    Batch Criteria{\" \"}\n                  </p>\n                  {companyDetails?.optional_criteria === true ? (\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.percentage_10th ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}{\" \"}\n                      10th Percentage{\" \"}\n                    </p>\n                  ) : (\n                    <div></div>\n                  )}\n                  {companyDetails?.optional_criteria === true ? (\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.percentage_12th ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}{\" \"}\n                      12th Percentage{\" \"}\n                    </p>\n                  ) : (\n                    <div></div>\n                  )}\n                  <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                    {conditions && !conditions.branch ? (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"green\",\n                        }}\n                        icon={faCheckCircle}\n                      />\n                    ) : (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"red\",\n                        }}\n                        icon={faTimesCircle}\n                      />\n                    )}{\" \"}\n                    Branch Criteria{\" \"}\n                  </p>\n                  <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                    {conditions && !conditions.degree ? (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"green\",\n                        }}\n                        icon={faCheckCircle}\n                      />\n                    ) : (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"red\",\n                        }}\n                        icon={faTimesCircle}\n                      />\n                    )}{\" \"}\n                    Degree Criteria{\" \"}\n                  </p>\n                  <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                    {conditions && !conditions.backlogs ? (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"green\",\n                        }}\n                        icon={faCheckCircle}\n                      />\n                    ) : (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"red\",\n                        }}\n                        icon={faTimesCircle}\n                      />\n                    )}\n                    Backlogs Criteria\n                  </p>\n                  <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                    {conditions && !conditions.bans ? (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"green\",\n                        }}\n                        icon={faCheckCircle}\n                      />\n                    ) : (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"red\",\n                        }}\n                        icon={faTimesCircle}\n                      />\n                    )}\n                    Ban Criteria\n                  </p>\n                  <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                    {conditions && !conditions.gender ? (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"green\",\n                        }}\n                        icon={faCheckCircle}\n                      />\n                    ) : (\n                      <FontAwesomeIcon\n                        style={{\n                          fontSize: \"23px\",\n                          marginRight: \"10px\",\n                          color: \"red\",\n                        }}\n                        icon={faTimesCircle}\n                      />\n                    )}\n                    Gender Criteria\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n          <Form>\n            <Form.Group className=\"mb-3\">\n              {!alreadyAppliedStatus &&\n                eligible &&\n                additionalQues?.map((ls) => (\n                  <>\n                    <Form.Label style={{ color: \"black\" }}>\n                      {ls[\"ques\"]}\n                    </Form.Label>\n                    {ls[\"type\"] === \"multi\" ? (\n                      <>\n                        {ls[\"options\"].map((option, index) => (\n                          <div key={index} className=\"mb-3\">\n                            <Form.Check\n                              type=\"checkbox\"\n                              id={`multi-checkbox-${index}`}\n                              label={option}\n                              onChange={(e) => {\n                                const l = e.target.id;\n                                const target = l[l.length - 1];\n                                const flag = e.target.checked;\n\n                                additionalAns.forEach((val) => {\n                                  if (val[\"ques\"] === ls[\"ques\"]) {\n                                    if (flag)\n                                      pref_locs.push(val[\"options\"][target]);\n                                    else\n                                      pref_locs = pref_locs.filter(\n                                        (element) =>\n                                          element !== val[\"options\"][target]\n                                      );\n                                    val[\"expectedAns\"] = pref_locs;\n                                  }\n                                  const allFilled = additionalAns?.every(\n                                    (question) =>\n                                      question.expectedAns.trim() !== \"\"\n                                  );\n                                  setInputStatus(allFilled);\n                                  // additionalAns.map((i) => {\n                                  //   if (i.expectedAns === \"\") {\n                                  //     return setInputStatus(false);\n                                  //   }\n                                  //   return setInputStatus(true);\n                                  // });\n                                });\n\n                                // const newValue = e.target.checked\n                                //   ? [...(additionalAns.find((val) => val[\"ques\"] === ls[\"ques\"])[\"expectedAns\"], option)]\n                                //   : additionalAns.find((val) => val[\"ques\"] === ls[\"ques\"])[\"expectedAns\"].filter((opt) => opt !== option);\n                                // additionalAns.forEach((val) => {\n                                //   if (val[\"ques\"] === ls[\"ques\"]) {\n                                //     val[\"expectedAns\"] = newValue;\n                                //   }\n                                //   additionalAns.map((i) => {\n                                //     if (i.expectedAns === \"\") {\n                                //       return setInputStatus(false);\n                                //     }\n                                //     return setInputStatus(true);\n                                //   });\n                                // });\n                              }}\n                            />\n                          </div>\n                        ))}\n                      </>\n                    ) : ls[\"type\"] === \"single\" ? (\n                      <>\n                        {ls[\"options\"].map((option, index) => (\n                          <div key={index} className=\"mb-3\">\n                            <Form.Check\n                              type=\"radio\"\n                              id={`single-radio-${index}`}\n                              label={option}\n                              name={ls[\"ques\"]}\n                              onChange={(e) => {\n                                const l = e.target.id;\n                                const value = l[l.length - 1];\n                                additionalAns.forEach((val) => {\n                                  if (val[\"ques\"] === ls[\"ques\"]) {\n                                    val[\"expectedAns\"] = val[\"options\"][value];\n                                  }\n                                  const allFilled = additionalAns?.every(\n                                    (question) =>\n                                      question.expectedAns.trim() !== \"\"\n                                  );\n                                  setInputStatus(allFilled);\n                                  // additionalAns.map((i) => {\n                                  //   if (i.expectedAns === \"\") {\n                                  //     return setInputStatus(false);\n                                  //   }\n                                  //   return setInputStatus(true);\n                                  // });\n                                });\n                              }}\n                            />\n                          </div>\n                        ))}\n                      </>\n                    ) : ls[\"type\"] === \"file\" ? (\n                      <Form.Control\n                        type=\"file\"\n                        required\n                        accept=\".pdf\"\n                        onChange={(e) => {\n                          const file = e.target.files[0];\n\n                          if (file) {\n                            const updatedFiles = filesToUpload.filter(\n                              (f) => f.question !== ls[\"ques\"]\n                            );\n\n                            updatedFiles.push({ file, question: ls[\"ques\"] });\n\n                            setFiles(updatedFiles);\n                            additionalAns.forEach((val) => {\n                              if (val[\"ques\"] === ls[\"ques\"]) {\n                                val[\n                                  \"expectedAns\"\n                                ] = `https://tnpnsut-files.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`;\n                              }\n                              const allFilled = additionalAns?.every(\n                                (question) => question.expectedAns.trim() !== \"\"\n                              );\n                              setInputStatus(allFilled);\n                              // additionalAns.map((i) => {\n                              //   if (i.expectedAns === \"\") {\n                              //     return setInputStatus(false);\n                              //   }\n                              //   return setInputStatus(true);\n                              // });\n                            });\n                          }\n                        }}\n                      />\n                    ) : (\n                      <Form.Control\n                        type=\"text\"\n                        required\n                        placeholder={ls[\"expectedAns\"]}\n                        onChange={(e) => {\n                          additionalAns.forEach((val) => {\n                            if (val[\"ques\"] === ls[\"ques\"]) {\n                              val[\"expectedAns\"] = e.target.value;\n                            }\n                            const allFilled = additionalAns?.every(\n                              (question) => question.expectedAns.trim() !== \"\"\n                            );\n                            setInputStatus(allFilled);\n                            // additionalAns.map((i) => {\n                            //   if (i.expectedAns === \"\") {\n                            //     return setInputStatus(false);\n                            //   }\n                            //   return setInputStatus(true);\n                            // });\n                          });\n                        }}\n                      />\n                    )}\n                  </>\n                ))}\n              <Form.Label style={{ color: \"black\" }}>\n                Select a Resume\n              </Form.Label>\n              <InputGroup>\n                <InputGroup.Text>\n                  <FontAwesomeIcon icon={faSearch} />\n                </InputGroup.Text>\n                <Form.Select\n                  value={selectedResume}\n                  onChange={(e) => {\n                    setSelectedResume(e.target.value);\n                  }}\n                >\n                  {resumes &&\n                    resumes.map((sn, index) => (\n                      <option key={index} value={sn.url}>\n                        {sn.name}\n                      </option>\n                    ))}\n                </Form.Select>\n              </InputGroup>\n            </Form.Group>\n\n\n            {\n              alreadyAppliedStatus &&\n              <Button\n              type=\"submit\"\n              style={{\n                width: \"100%\",\n                background: \"linear-gradient(to right, #2A2D3E, #202332)\",\n                borderColor: \"#202332\",\n                marginTop: \"1rem\",\n              }}\n              disabled={\n                isRegistrationDatePassed ||\n                !alreadyAppliedStatus\n              }\n              onClick={(e) => withdrawForRole(e)}\n            >\n              WithDraw\n            </Button>\n            }\n\n            { \n            !alreadyAppliedStatus &&\n            <Button\n              type=\"submit\"\n              style={{\n                width: \"100%\",\n                background: \"linear-gradient(to right, #fb7b4a, #ee3344)\",\n                borderColor: \"#fb7b4a\",\n                marginTop: \"1rem\",\n              }}\n              disabled={\n                !inputStatus ||\n                !eligible ||\n                selectedResume === \"\" ||\n                isRegistrationDatePassed ||\n                alreadyAppliedStatus\n              }\n              onClick={() => applyForRole()}\n            >\n              Apply\n            </Button>\n            }\n\n          </Form>\n          {!isRegistrationDatePassed && !inputStatus && eligible && (\n            <p\n              style={{ color: \"red\", fontWeight: \"bolder\" }}\n              className=\"text-red\"\n            >\n              Please fill the above form to apply\n            </p>\n          )}\n          {isRegistrationDatePassed && (\n            <p style={{ color: \"red\" }} className=\"text-red\">\n              Registration Date has passed\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CompanyDetails;\n"],"sourceRoot":""}