{"version":3,"sources":["pages/studentside/Support/feedback/FeedbackItem.jsx","pages/studentside/Support/feedback/MyFeedbacks.jsx"],"names":["FeedbackItem","_ref","item","show","setShow","useState","handleClose","React","createElement","Fragment","Card","className","style","cursor","overflowX","Body","Row","Col","sm","Title","id","Button","variant","onClick","handleShow","margin","fontWeight","Date","createdAt","toString","slice","isResolved","resolved_date","resolved_by","Modal","onHide","size","Header","closeButton","Form","Group","Label","Control","name","value","feedback_data","as","rows","disabled","feedback_reply","Footer","MyFeedbacks","state","useContext","AuthContext","feedbacks","setFeedbacks","isLoading","setIsLoading","showResolved","setshowResolved","useEffect","async","securedAxiosInstance","get","userDetails","student","then","response","data","catch","error","console","log","toast","fetchMyResolvedFeedbacks","fetchMyFeedbacks","Loader","Container","Toaster","Check","type","label","checked","onChange","map","index","key"],"mappings":"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","file":"static/js/13.e2d6bbf3.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  Col,\n  Form,\n  Modal,\n  Row,\n} from \"@themesberg/react-bootstrap\";\nimport React, { useState } from \"react\";\nimport \"./Feedback.css\";\n\nfunction FeedbackItem({ item }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Card\n        className=\"bg-light mb-3\"\n        style={{ cursor: \"pointer\", overflowX: \"hidden\" }}\n      >\n        <Card.Body>\n          <Row>\n            <Col sm={5}>\n              <Card.Title>Feedback ID: {item.id}</Card.Title>\n              <Button className=\"mt-3\" variant=\"success\" onClick={handleShow}>\n                Details\n              </Button>\n            </Col>\n            <Col sm={7}>\n              <div className=\"d-flex flex-column align-items-start\">\n                <div className=\"d-flex w-100 p-1\">\n                  <div>\n                    <p style={{ margin: \"0px\", fontWeight: \"700\" }}>\n                      Created on :{\" \"}\n                      {new Date(item.createdAt).toString().slice(0, 15)}\n                    </p>\n                  </div>\n                  <div\n                    className={`tag border rounded px-1 ${\n                      item.isResolved ? \"resolved\" : \"pending\"\n                    }`}\n                  >\n                    {item.isResolved ? \"Resolved\" : \"Pending\"}\n                  </div>\n                </div>\n                <div className=\"d-flex w-100 p-1\">\n                  <div>\n                    <p style={{ margin: \"0px\", fontWeight: \"700\" }}>\n                      Resolved on :{\" \"}\n                      {item.isResolved\n                        ? `${new Date(item.resolved_date)\n                            .toString()\n                            .slice(0, 15)}`\n                        : \"NA\"}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"d-flex w-100 p-1\">\n                  <div>\n                    <p style={{ margin: \"0px\", fontWeight: \"700\" }}>\n                      Resolved By : {item.isResolved ? item.resolved_by : \"NA\"}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n      <Modal show={show} onHide={handleClose} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title className=\"text-center\">Feedback Or Query</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Feedback Or Query :</Form.Label>\n            <Form.Control\n              className=\"mr-2\"\n              name=\"feedback_data\"\n              value={item.feedback_data}\n              id=\"feedback_data\"\n              as=\"textarea\"\n              rows={5}\n              disabled\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Reply :</Form.Label>\n            <Form.Control\n              className=\"mr-2\"\n              name=\"feedback_data\"\n              value={item.isResolved ? item.feedback_reply : \" \"}\n              id=\"feedback_data\"\n              as=\"textarea\"\n              rows={5}\n              disabled\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default FeedbackItem;\n","import React, { useContext } from 'react'\nimport { useState, useEffect } from 'react';\nimport { AuthContext } from '../../../../context/AuthContext';\nimport { securedAxiosInstance } from '../../../../axiosConfig';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Card, Container, Form } from \"@themesberg/react-bootstrap\"\nimport Loader from \"../../../../components/Loader\";\nimport FeedbackItem from './FeedbackItem';\n\nfunction MyFeedbacks() {\n    const { state } = useContext(AuthContext);\n    const [feedbacks, setFeedbacks] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [showResolved, setshowResolved] = useState(false);\n\n    const fetchMyFeedbacks = async () => {\n        securedAxiosInstance\n            .get(`/feedbacks?_where[0][student_id]=${state.userDetails.student}&_sort=createdAt:desc`)\n            .then((response) => {\n                setFeedbacks(response.data)\n                setIsLoading(false)\n            })\n            .catch((error) => {\n                setIsLoading(false)\n                console.log(error, error.response);\n                toast.error(\"Something Went Wrong!\")\n            })\n    }\n\n    const fetchMyResolvedFeedbacks = async () => {\n        securedAxiosInstance\n            .get(`/feedbacks?_where[0][isResolved]=true&_where[1][student_id]=${state.userDetails.student}&_sort=createdAt:desc`)\n            .then((response) => {\n                setFeedbacks(response.data)\n                setIsLoading(false)\n            })\n            .catch((error) => {\n                setIsLoading(false)\n                console.log(error, error.response);\n                toast.error(\"Something Went Wrong!\")\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true)\n        if(showResolved){\n            fetchMyResolvedFeedbacks();\n        } else {\n            fetchMyFeedbacks();\n        }\n\n        // eslint-disable-next-line\n    }, [showResolved])\n\n    if (isLoading) return <Loader />; \n\n  return (\n    <Container className=\"p-4\">\n        <Toaster />\n        <Card className=\"p-4\">\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n            <div className=\"text-center flex-grow-1\">\n                <h3 className=\"mb-0\">My Feedbacks Or Queries</h3>\n            </div>\n            <div>\n                <Form.Check\n                type=\"switch\"\n                id=\"custom-switch\"\n                label=\"Show Resolved\"\n                className=\"mb-0\"\n                checked={showResolved}\n                onChange={() => setshowResolved(!showResolved)}\n                />\n            </div>\n            </div>\n            {feedbacks.map((item, index) => (\n                <FeedbackItem key={index} item={item} />\n            ))}\n        </Card>\n    </Container>\n  )\n}\n\nexport default MyFeedbacks"],"sourceRoot":""}