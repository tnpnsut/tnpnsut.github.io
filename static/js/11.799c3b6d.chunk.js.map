{"version":3,"sources":["utils/dateformatter.js","services/fileUpload.js","css/Companydetails.module.css","../node_modules/@themesberg/react-bootstrap/lib/esm/InputGroup.js","pages/studentside/CompanyDetails.js"],"names":["dateFormatter","date","dt","Date","setHours","getHours","setMinutes","getMinutes","fileUpload","file","a","formdata","FormData","append","securedAxiosInstance","post","uploadResumeAndLink","index","uploadResponse","put","uploadId","data","_id","linkResumeResponse","deleteResume","module","exports","InputGroupText","createWithBsPrefix","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","FormCheckInput","type","Checkbox","CompanyDetails","params","match","state","useContext","AuthContext","useState","companyDetails","setCompanyDetails","eligible","setEligible","resumes","setResumes","selectedResume","setSelectedResume","conditions","setconditions","additionalQues","setAdditionalQues","additionalAns","setAdditionalAns","inputStatus","setInputStatus","console","log","loading","success","error","submitStatus","setStatus","alreadyAppliedStatus","setAlreadyAppliedStatus","alreadyPlacedStatus","setAlreadyPlacedStatus","showNotification","NotificationContext","filesToUpload","setFiles","fetchResumes","current","get","res","url","fetchCompany","eventid","company","degreeBranchesMap","branchesAllowed","forEach","item","branch","degree","push","checkEligibility","userDetails","student","status","already_applied","already_placed","conv_url","question","formData","uploadService","response","map","el","expectedAns","withdrawForRole","e","preventDefault","id","student_id","then","window","location","reload","applyForRole","length","Promise","all","uploadedFileUrls","every","studentID","student_resume","Additional_answers","useEffect","isRegistrationDatePassed","lastDate","getTime","now","styles","outerdiv","companybar","Name","jobtitle","wrapper","contentdiv","hero","companylogo","src","alt","companycontentwrapper","style","padding","typetag","marginTop","marginBottom","parent","parenttag","parentcontent","placeOfPosting","batch","stipend","stipend_info","cgpa","category","toUpperCase","backlogs","Object","entries","branches","key","join","toDateString","toLocaleTimeString","whiteSpace","apc","additional_info","optional_redirect","href","target","rel","color","textDecoration","description","attachments","sn","cursor","onClick","open","fileicon","width","filetitle","name","downloadicon","fontSize","resumediv","eligiblewrapper","fontWeight","display","marginRight","icon","faCheckCircle","faTimesCircle","optional_criteria","percentage_10th","percentage_12th","ban","gender","Group","ls","Label","option","Check","label","onChange","l","flag","checked","val","replace","allFilled","value","trim","Control","required","accept","files","updatedFiles","filter","f","placeholder","faSearch","Select","background","borderColor","disabled"],"mappings":"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","file":"static/js/11.799c3b6d.chunk.js","sourcesContent":["export const dateFormatter = (date) => {\n  let dt = new Date(date);\n  dt.setHours(dt.getHours());\n  dt.setMinutes(dt.getMinutes());\n\n  return dt;\n};\n","import { securedAxiosInstance } from \"../axiosConfig\";\n\nexport async function fileUpload(file) {\n  const formdata = new FormData();\n  formdata.append(\"files\", file);\n\n  return await securedAxiosInstance.post(\"/upload\", formdata);\n}\n\nexport async function fileUploadAndLink(file, ref, refId, field) {\n  const formdata = new FormData();\n  formdata.append(\"ref\", ref);\n  formdata.append(\"refId\", refId);\n  formdata.append(\"field\", field);\n  formdata.append(\"files\", file);\n\n  return securedAxiosInstance.post(\"/upload\", formdata);\n}\n\nexport async function uploadResumeAndLink(file, index) {\n  if (!file) return;\n\n  const uploadResponse = await fileUpload(file);\n\n  const linkResumeResponse = await securedAxiosInstance.put(\n    \"/students/resume\",\n    {\n      uploadId: uploadResponse.data[0]._id,\n      index,\n    }\n  );\n  return linkResumeResponse;\n}\n\nexport async function deleteResume(uploadId) {\n  if (!uploadId) return;\n\n  return await securedAxiosInstance.put(`/students/resume/${uploadId}`);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerdiv\":\"Companydetails_outerdiv__3K0H1\",\"companybar\":\"Companydetails_companybar__23Sj-\",\"wrapper\":\"Companydetails_wrapper__z9mdp\",\"contentdiv\":\"Companydetails_contentdiv__1tnFf\",\"resumediv\":\"Companydetails_resumediv__2HLKP\",\"hero\":\"Companydetails_hero__19a3J\",\"companylogo\":\"Companydetails_companylogo__3MDiK\",\"typetag\":\"Companydetails_typetag__2OlVK\",\"parent\":\"Companydetails_parent__28pXE\",\"parenttag\":\"Companydetails_parenttag__1nQ84\",\"file\":\"Companydetails_file__2UJ9i\",\"fileicon\":\"Companydetails_fileicon__3-M_8\",\"filetitle\":\"Companydetails_filetitle__3KaqA\",\"downloadicon\":\"Companydetails_downloadicon__1U-ng\",\"eligiblewrapper\":\"Companydetails_eligiblewrapper__2zcKs\",\"companycontentwrapper\":\"Companydetails_companycontentwrapper__1ZZrW\"};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});\n\nexport default InputGroupWithExtras;","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  faCheckCircle,\n  faSearch,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Form, InputGroup } from \"@themesberg/react-bootstrap\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { securedAxiosInstance } from \"../../axiosConfig\";\nimport Loader from \"../../components/Loader\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { NotificationContext } from \"../../context/NotificationContext\";\nimport styles from \"../../css/Companydetails.module.css\";\nimport { dateFormatter } from \"../../utils/dateformatter\";\nimport * as uploadService from \"../../services/fileUpload\";\n\nconst CompanyDetails = ({ match }) => {\n  const { params } = match;\n  const { state } = useContext(AuthContext);\n  const [companyDetails, setCompanyDetails] = useState({});\n  const [eligible, setEligible] = useState(true);\n  const [resumes, setResumes] = useState([]);\n  const [selectedResume, setSelectedResume] = useState(\"\");\n  const [conditions, setconditions] = useState();\n  const [additionalQues, setAdditionalQues] = useState(null);\n  const [additionalAns, setAdditionalAns] = useState([]);\n  const [inputStatus, setInputStatus] = useState(true);\n  console.log(additionalAns);\n\n  const [submitStatus, setStatus] = useState({\n    loading: false,\n    success: false,\n    error: false,\n  });\n  const [alreadyAppliedStatus, setAlreadyAppliedStatus] = useState(false);\n  const [alreadyPlacedStatus, setAlreadyPlacedStatus] = useState(false);\n  const { showNotification } = useContext(NotificationContext);\n  const [filesToUpload, setFiles] = useState([]);\n  const [uploadFile, setUploadFile] = useState(false);\n\n  const fetchResumes = async () => {\n    try {\n      setStatus((current) => ({ ...current, loading: true }));\n      const res = await securedAxiosInstance.get(`/students/resumes`);\n      setResumes(res.data.resumes);\n      setSelectedResume(res.data.resumes[0].url);\n      setStatus((current) => ({ ...current, loading: false }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchCompany = async () => {\n    try {\n      setStatus((current) => ({ ...current, loading: true }));\n      const company = await securedAxiosInstance.get(\n        `/company-events/${params.eventid}`\n      );\n      if (company.data[\"is_additional_ques\"] === true) {\n        setAdditionalQues(company.data[\"additional_ques\"]);\n        setAdditionalAns(company.data[\"additional_ques\"]);\n        setInputStatus(false);\n      } else {\n        setAdditionalQues(null);\n        setAdditionalAns(null);\n      }\n\n      const degreeBranchesMap = {};\n      company.data.branchesAllowed.forEach((item) => {\n        const { branch, degree } = item;\n        if (degree in degreeBranchesMap) {\n          degreeBranchesMap[degree].push(branch);\n        } else {\n          degreeBranchesMap[degree] = [branch];\n        }\n      });\n\n      company.data.branchesAllowed = degreeBranchesMap;\n      setCompanyDetails(company.data);\n      setStatus((current) => ({ ...current, loading: false }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const checkEligibility = async () => {\n    try {\n      const status = await securedAxiosInstance.get(\n        `/company-events/is_student_eligible/${params.eventid}?studentID=${state.userDetails.student}`\n      );\n      if (status.data.eligible.conditions.already_applied)\n        setAlreadyAppliedStatus(true);\n      if (status.data.eligible.conditions.already_placed)\n        setAlreadyPlacedStatus(true);\n      setconditions(status.data.eligible.conditions);\n      setStatus((current) => ({ ...current, loading: false }));\n      setEligible(status.data.eligible.status);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Submitting pdf form of additional question\n  async function conv_url(file, question) {\n    if (!file) return;\n    const formData = new FormData();\n\n    try {\n      formData.append(`${question}`, file);\n\n      const response = await uploadService.fileUpload(file);\n\n      if (response.status === 200) {\n        additionalAns.map((el) => {\n          if (el.type == \"file\") {\n            el.expectedAns = response?.data[0]?.url;\n          }\n        });\n\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // to withdraw students application\n  const withdrawForRole = async (e) => {\n    e.preventDefault();\n\n    const id = params.eventid;\n    try {\n      await securedAxiosInstance\n        .post(`https://api.tnpnsut.in/registrations/${id}`, {\n          student_id: state.userDetails.student,\n        })\n        .then((res) => {\n          if (res.status == 200) {\n            console.log(res);\n            setAlreadyAppliedStatus(false);\n            setStatus((current) => ({\n              ...current,\n              loading: false,\n              success: true,\n            }));\n            showNotification(res?.data);\n            window.location.reload();\n          } else {\n            showNotification(res?.data);\n          }\n        });\n    } catch (error) {\n      showNotification(\"Error withdrawing from role!\");\n      throw error;\n    }\n  };\n\n  const applyForRole = async () => {\n    setStatus((current) => ({ ...current, loading: true }));\n\n    try {\n      // const uploadedFileUrls = filesToUpload.map(({ file, question }) => file.name);\n      if (filesToUpload && filesToUpload.length > 0) {\n        const uploadedFileUrls = await Promise.all(\n          filesToUpload.map(({ file, question }) => conv_url(file, question))\n        );\n\n        // Check if all files were uploaded successfully\n        const allFilesUploaded = uploadedFileUrls.every(\n          (status) => status === true\n        );\n\n        if (!allFilesUploaded) {\n          showNotification(\"Failed to apply in the company Event\");\n          return;\n        }\n      }\n\n      const response = await securedAxiosInstance.put(\n        `/company-events/apply/${params.eventid}`,\n        {\n          studentID: state.userDetails.student,\n          student_resume: selectedResume,\n          Additional_answers: additionalAns,\n        }\n      );\n\n      setAlreadyAppliedStatus(true);\n      setStatus((current) => ({ ...current, loading: false, success: true }));\n      showNotification(\"Successfully Applied!\");\n    } catch (error) {\n      setStatus((current) => ({\n        ...current,\n        loading: false,\n        success: false,\n        error: true,\n      }));\n      showNotification(\"Failed to apply in the company Event\");\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCompany();\n    checkEligibility();\n    fetchResumes();\n  }, []);\n\n  if (submitStatus.loading) return <Loader />;\n\n  const isRegistrationDatePassed =\n    new Date(companyDetails.lastDate).getTime() < Date.now();\n\n  return (\n    <>\n      <div className={styles.outerdiv}>\n        <div className={styles.companybar}>\n          <h6>\n            {companyDetails.company ? companyDetails.company.Name : \"\"} |{\" \"}\n            {companyDetails.jobtitle}\n          </h6>\n        </div>\n        <div className={styles.wrapper}>\n          <div className={styles.contentdiv}>\n            <div className={styles.hero}></div>\n            <div\n              className={`${styles.companylogo} d-flex justify-content-center align-items-center`}\n            >\n              <img\n                src={`https://tnp-company-logos.s3.ap-south-1.amazonaws.com/${companyDetails.company?.Name}.png`}\n                alt=\"Keep going!! You'll reach there.\"\n              ></img>\n            </div>\n            <div className={styles.companycontentwrapper}>\n              <div style={{ padding: \"30px 0px 0px\" }}>\n                <h3>{companyDetails.jobtitle}</h3>\n                <h6>\n                  {companyDetails.company ? companyDetails.company.Name : \"\"}\n                </h6>\n                <div className={styles.typetag}>{companyDetails.type}</div>\n                <hr style={{ marginTop: \"30px\" }} />\n              </div>\n              <div style={{ padding: \"30px 0\" }}>\n                <div style={{ marginBottom: \"30px\" }}>\n                  <h5>Opening Overview</h5>\n                  <hr />\n                </div>\n                <div>\n                  <div className={styles.parent}>\n                    <div className={styles.parenttag}>Place of Posting</div>\n                    <div className={styles.parentcontent}>\n                      {companyDetails.placeOfPosting}\n                    </div>\n                  </div>\n                  <div className={styles.parent}>\n                    <div className={styles.parenttag}>Batch</div>\n                    <div className={styles.parentcontent}>\n                      {companyDetails.batch}\n                    </div>\n                  </div>\n                  <div className={styles.parent}>\n                    <div className={styles.parenttag}>CTC/Stipend</div>\n                    <div className={styles.parentcontent}>\n                      {companyDetails.stipend}\n                    </div>\n                  </div>\n                  <div className={styles.parent}>\n                    <div className={styles.parenttag}>CTC/Stipend Info.</div>\n                    <div className={styles.parentcontent}>\n                      {companyDetails.stipend_info\n                        ? companyDetails.stipend_info\n                        : \"Not Mentioned\"}\n                    </div>\n                  </div>\n                  {(companyDetails.type === \"Placement\" ||\n                    companyDetails.type === \"Internship\") && (\n                    <>\n                      <div className={styles.parent}>\n                        <div className={styles.parenttag}>CGPA</div>\n                        <div className={styles.parentcontent}>\n                          {companyDetails.cgpa}\n                        </div>\n                      </div>\n                      <div className={styles.parent}>\n                        <div className={styles.parenttag}>Category</div>\n                        <div className={styles.parentcontent}>\n                          {companyDetails.category?.toUpperCase()}\n                        </div>\n                      </div>\n                      <div className={styles.parent}>\n                        <div className={styles.parenttag}>Backlogs</div>\n                        <div className={styles.parentcontent}>\n                          {companyDetails.backlogs}\n                        </div>\n                      </div>\n                      <div className={styles.parent}>\n                        <div className={styles.parenttag}>Allowed Branches</div>\n                        <div className={styles.parentcontent}>\n                          {Object.entries(companyDetails.branchesAllowed).map(\n                            ([degree, branches]) => (\n                              <div key={degree}>\n                                <span className=\"fw-bolder\">{degree}</span>:{\" \"}\n                                {branches.join(\", \")}\n                              </div>\n                            )\n                          )}\n                        </div>\n                      </div>\n                      <div className={styles.parent}>\n                        <div className={styles.parenttag}>\n                          Registration last date\n                        </div>\n                        <div className={styles.parentcontent}>\n                          {dateFormatter(\n                            companyDetails.lastDate\n                          ).toDateString()}{\" \"}\n                          -\n                          {dateFormatter(\n                            companyDetails.lastDate\n                          ).toLocaleTimeString()}\n                        </div>\n                      </div>\n                    </>\n                  )}\n                  <div className={styles.parent}>\n                    <div className={styles.parenttag}>Coordinaters</div>\n                    <div\n                      className={styles.parentcontent}\n                      style={{ whiteSpace: \"pre-line\" }}\n                    >\n                      {companyDetails?.apc}\n                    </div>\n                  </div>\n                  {companyDetails?.additional_info !== \"\" && (\n                    <div className={styles.parent}>\n                      <div className={styles.parenttag}>Additional Info</div>\n                      <div className={styles.parentcontent}>\n                        {companyDetails?.additional_info}\n                      </div>\n                    </div>\n                  )}\n                  {companyDetails?.optional_redirect !== \"\" && (\n                    <div className={styles.parent}>\n                      <div className={styles.parenttag}>Form Link</div>\n                      <div className={styles.parentcontent}>\n                        <a\n                          href={companyDetails?.optional_redirect || \"#\"}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          style={{ color: \"blue\", textDecoration: \"underline\" }}\n                        >\n                          Click Here\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div style={{ padding: \"30px 0\" }}>\n                <div style={{ marginBottom: \"30px\" }}>\n                  <h5>Job Description</h5>\n                  <hr />\n                </div>\n                <div style={{ whiteSpace: \"pre-line\" }}>\n                  {companyDetails.description}\n                </div>\n              </div>\n              <div style={{ padding: \"30px 0\" }}>\n                <div style={{ marginBottom: \"30px\" }}>\n                  <h5>Attached Documents</h5>\n                  <hr />\n                </div>\n                <div>\n                  {companyDetails.attachments &&\n                    companyDetails.attachments.map((sn, index) => (\n                      <div\n                        key={index}\n                        className={`${styles.file} mb-2`}\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => window.open(sn.url)}\n                      >\n                        <div className={styles.fileicon}>\n                          <img src=\"/pdf.png\" width=\"60%\" alt=\"pdf\" />\n                        </div>\n                        <div className={styles.filetitle}>{sn.name}</div>\n                        <div className={styles.downloadicon}>\n                          <i\n                            style={{ color: \"#1456cf\", fontSize: \"20px\" }}\n                            className=\"bi bi-download\"\n                          ></i>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={styles.resumediv}>\n            <div style={{ padding: \"30px 0\" }}>\n              <div style={{ marginBottom: \"30px\" }}>\n                <h6>Eligibility Criteria Evaluation Result</h6>\n                <p style={{ fontSize: \"13px\" }}>\n                  Evaluated At: {new Date().toDateString()}\n                </p>\n                <hr />\n              </div>\n              <div className={styles.eligiblewrapper}>\n                {alreadyAppliedStatus && (\n                  <div style={{ width: \"80%\" }}>\n                    <p\n                      style={{\n                        fontSize: \"16px\",\n                        // display: \"flex\",\n                        fontWeight: \"bold\",\n                        color: \"red\",\n                      }}\n                    >\n                      You have already applied for this opportunity.\n                    </p>\n                  </div>\n                )}\n\n                {alreadyPlacedStatus && (\n                  <div style={{ width: \"80%\" }}>\n                    <p\n                      style={{\n                        fontSize: \"16px\",\n                        display: \"flex\",\n                        fontWeight: \"bold\",\n                        color: \"red\",\n                      }}\n                    >\n                      You cannot apply for this opportunity because you are\n                      already placed.\n                    </p>\n                  </div>\n                )}\n                {(!alreadyAppliedStatus || !alreadyPlacedStatus) && (\n                  <div style={{ width: \"80%\" }}>\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.cgpa ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}\n                      CGPA Criteria\n                    </p>\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.batch ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}{\" \"}\n                      Batch Criteria{\" \"}\n                    </p>\n                    {companyDetails?.optional_criteria === true ? (\n                      <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                        {conditions && !conditions.percentage_10th ? (\n                          <FontAwesomeIcon\n                            style={{\n                              fontSize: \"23px\",\n                              marginRight: \"10px\",\n                              color: \"green\",\n                            }}\n                            icon={faCheckCircle}\n                          />\n                        ) : (\n                          <FontAwesomeIcon\n                            style={{\n                              fontSize: \"23px\",\n                              marginRight: \"10px\",\n                              color: \"red\",\n                            }}\n                            icon={faTimesCircle}\n                          />\n                        )}{\" \"}\n                        10th Percentage{\" \"}\n                      </p>\n                    ) : (\n                      <div></div>\n                    )}\n                    {companyDetails?.optional_criteria === true ? (\n                      <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                        {conditions && !conditions.percentage_12th ? (\n                          <FontAwesomeIcon\n                            style={{\n                              fontSize: \"23px\",\n                              marginRight: \"10px\",\n                              color: \"green\",\n                            }}\n                            icon={faCheckCircle}\n                          />\n                        ) : (\n                          <FontAwesomeIcon\n                            style={{\n                              fontSize: \"23px\",\n                              marginRight: \"10px\",\n                              color: \"red\",\n                            }}\n                            icon={faTimesCircle}\n                          />\n                        )}{\" \"}\n                        12th Percentage{\" \"}\n                      </p>\n                    ) : (\n                      <div></div>\n                    )}\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.branch ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}{\" \"}\n                      Branch Criteria{\" \"}\n                    </p>\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.degree ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}{\" \"}\n                      Degree Criteria{\" \"}\n                    </p>\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.backlogs ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}\n                      Backlogs Criteria\n                    </p>\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.ban ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}\n                      Ban Criteria\n                    </p>\n                    <p style={{ fontSize: \"16px\", display: \"flex\" }}>\n                      {conditions && !conditions.gender ? (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"green\",\n                          }}\n                          icon={faCheckCircle}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            fontSize: \"23px\",\n                            marginRight: \"10px\",\n                            color: \"red\",\n                          }}\n                          icon={faTimesCircle}\n                        />\n                      )}\n                      Gender Criteria\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n            <Form>\n              <Form.Group className=\"mb-3\">\n                {eligible &&\n                  alreadyAppliedStatus &&\n                  additionalQues?.map((ls) => (\n                    <>\n                      <Form.Label style={{ color: \"black\" }}>\n                        {ls[\"ques\"]}\n                      </Form.Label>\n                      {ls[\"type\"] === \"multi\" ? (\n                        <>\n                          {ls[\"options\"].map((option, index) => (\n                            <div key={index} className=\"mb-3\">\n                              <Form.Check\n                                type=\"checkbox\"\n                                id={`multi-checkbox-${index}`}\n                                label={option}\n                                onChange={(e) => {\n                                  const l = e.target.id;\n                                  const target = l[l.length - 1];\n                                  const flag = e.target.checked;\n\n                                  additionalAns.forEach((val) => {\n                                    if (val[\"ques\"] === ls[\"ques\"]) {\n                                      if (flag)\n                                        val[\"expectedAns\"] +=\n                                          val[\"options\"][target] + \", \";\n                                      // pref_locs.push(val[\"options\"][target]);\n                                      // pref_locs = pref_locs.filter(\n                                      //   (element) =>\n                                      //     element !== val[\"options\"][target]\n                                      // );\n                                      else {\n                                        val[\"expectedAns\"] = val[\n                                          \"expectedAns\"\n                                        ].replace(\n                                          val[\"options\"][target] + \", \",\n                                          \"\"\n                                        );\n                                      }\n                                      // val[\"expectedAns\"] = pref_locs;\n                                    }\n                                    const allFilled = additionalAns?.every(\n                                      (question) => question.expectedAns !== \"\"\n                                    );\n                                    setInputStatus(allFilled);\n                                  });\n                                }}\n                              />\n                            </div>\n                          ))}\n                        </>\n                      ) : ls[\"type\"] === \"single\" ? (\n                        <>\n                          {ls[\"options\"].map((option, index) => (\n                            <div key={index} className=\"mb-3\">\n                              <Form.Check\n                                type=\"radio\"\n                                id={`single-radio-${index}`}\n                                label={option}\n                                name={ls[\"ques\"]}\n                                onChange={(e) => {\n                                  const l = e.target.id;\n                                  const value = l[l.length - 1];\n                                  additionalAns.forEach((val) => {\n                                    if (val[\"ques\"] === ls[\"ques\"]) {\n                                      val[\"expectedAns\"] =\n                                        val[\"options\"][value];\n                                    }\n                                    const allFilled = additionalAns?.every(\n                                      (question) =>\n                                        question.expectedAns.trim() !== \"\"\n                                    );\n                                    setInputStatus(allFilled);\n                                    // additionalAns.map((i) => {\n                                    //   if (i.expectedAns === \"\") {\n                                    //     return setInputStatus(false);\n                                    //   }\n                                    //   return setInputStatus(true);\n                                    // });\n                                  });\n                                }}\n                              />\n                            </div>\n                          ))}\n                        </>\n                      ) : ls[\"type\"] === \"file\" ? (\n                        <Form.Control\n                          type=\"file\"\n                          required\n                          accept=\".pdf\"\n                          onChange={(e) => {\n                            const file = e.target.files[0];\n\n                            if (file) {\n                              const updatedFiles = filesToUpload.filter(\n                                (f) => f.question !== ls[\"ques\"]\n                              );\n\n                              updatedFiles.push({ file, question: ls[\"ques\"] });\n\n                              setFiles(updatedFiles);\n                              additionalAns.forEach((val) => {\n                                if (val[\"ques\"] === ls[\"ques\"]) {\n                                  val[\n                                    \"expectedAns\"\n                                  ] = `https://tnpnsut-files.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`;\n                                }\n                                const allFilled = additionalAns?.every(\n                                  (question) =>\n                                    question.expectedAns.trim() !== \"\"\n                                );\n                                setInputStatus(allFilled);\n                                // additionalAns.map((i) => {\n                                //   if (i.expectedAns === \"\") {\n                                //     return setInputStatus(false);\n                                //   }\n                                //   return setInputStatus(true);\n                                // });\n                              });\n                            }\n                          }}\n                        />\n                      ) : (\n                        <Form.Control\n                          type=\"text\"\n                          required\n                          placeholder={ls[\"expectedAns\"]}\n                          onChange={(e) => {\n                            additionalAns.forEach((val) => {\n                              if (val[\"ques\"] === ls[\"ques\"]) {\n                                val[\"expectedAns\"] = e.target.value;\n                              }\n                              const allFilled = additionalAns?.every(\n                                (question) => question.expectedAns.trim() !== \"\"\n                              );\n                              setInputStatus(allFilled);\n                              // additionalAns.map((i) => {\n                              //   if (i.expectedAns === \"\") {\n                              //     return setInputStatus(false);\n                              //   }\n                              //   return setInputStatus(true);\n                              // });\n                            });\n                          }}\n                        />\n                      )}\n                    </>\n                  ))}\n                {eligible && alreadyAppliedStatus && (\n                  <>\n                    <Form.Label style={{ color: \"black\" }}>\n                      Select a Resume\n                    </Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      <Form.Select\n                        value={selectedResume}\n                        onChange={(e) => {\n                          setSelectedResume(e.target.value);\n                        }}\n                      >\n                        {resumes &&\n                          resumes.map((sn, index) => (\n                            <option key={index} value={sn.url}>\n                              {sn.name}\n                            </option>\n                          ))}\n                      </Form.Select>\n                    </InputGroup>\n                  </>\n                )}\n              </Form.Group>\n\n              {alreadyAppliedStatus && (\n                <Button\n                  type=\"submit\"\n                  style={{\n                    width: \"100%\",\n                    background: \"linear-gradient(to right, #2A2D3E, #202332)\",\n                    borderColor: \"#202332\",\n                    marginTop: \"1rem\",\n                  }}\n                  disabled={isRegistrationDatePassed || !alreadyAppliedStatus}\n                  onClick={(e) => withdrawForRole(e)}\n                >\n                  WithDraw\n                </Button>\n              )}\n\n              {!alreadyAppliedStatus && (\n                <Button\n                  type=\"submit\"\n                  style={{\n                    width: \"100%\",\n                    background: \"linear-gradient(to right, #fb7b4a, #ee3344)\",\n                    borderColor: \"#fb7b4a\",\n                    marginTop: \"1rem\",\n                  }}\n                  disabled={\n                    !inputStatus ||\n                    !eligible ||\n                    selectedResume === \"\" ||\n                    isRegistrationDatePassed ||\n                    alreadyAppliedStatus\n                  }\n                  onClick={() => applyForRole()}\n                >\n                  Apply\n                </Button>\n              )}\n            </Form>\n            {!isRegistrationDatePassed && !inputStatus && eligible && (\n              <p\n                style={{ color: \"red\", fontWeight: \"bolder\" }}\n                className=\"text-red\"\n              >\n                Please fill the above form to apply\n              </p>\n            )}\n            {isRegistrationDatePassed && (\n              <p style={{ color: \"red\" }} className=\"text-red\">\n                Registration Date has passed\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default CompanyDetails;\n"],"sourceRoot":""}